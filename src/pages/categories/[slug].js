import Head from 'next/head'

import Layout from '@components/Layout';
import Header from '@components/Header';
import Container from '@components/Container';
import Button from '@components/Button';
import Image from "next/image";
import styles from '@styles/Page.module.scss';
import Link from 'next/link';
import {
  ApolloClient,
  InMemoryCache,
  gql
} from "@apollo/client/core";
export default function Category({category}) {
  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Container>
        <h1>{category[0].name}</h1>

        <h2>Products</h2>

        <ul className={styles.products}>
          {category[0].products.map((db)=>(
          <li key={db.id}>
            <Link href={"/products/"+db.slug} passHref>
              <a>
              <div className={styles.productImage}>
                <Image alt={db.name} src={db.image.url} width={db.image.width} height={db.image.height}/>
              </div>
              <h3 className={styles.productTitle}>
               {db.name}
              </h3>
              <p className={styles.productPrice}>
               ${db.price}
              </p>
              </a>
            </Link>
            <p>
            <Button  className="snipcart-add-item"
                      data-item-id={db.id}
                      data-item-price={db.price}
                      data-item-url={"/products/"+db.slug}
                      data-item-description={db.name}
                      data-item-image={db.image.url}
                      data-item-name={db.name}>
                      Add to cart
                    
            </Button>
            </p>
          </li>
          ))}
        </ul>
      </Container>
    </Layout>
  )
}
export async function getStaticProps({params}){
  const client = new ApolloClient({
    uri: process.env.GRAPHQL_KEY,
    cache: new InMemoryCache()
  });
  const data = await client.query({
    query: gql`
     query PageCategories($slug:String) {
      categories(where:{slug:$slug}){
    name
    id
    slug
    
    products{
      id
      name
      image
      price
      slug
    }

  }
}`,
  variables:{
    slug:params.slug
}
});
console.log(data.data)
  return {
     props:{
        category:data.data.categories
     }
  }
}
export  async function getStaticPaths(){
  const client = new ApolloClient({
    uri: process.env.GRAPHQL_KEY,
    cache: new InMemoryCache()
  });
  const data = await client.query({
    query: gql`
     query PageProducts {
      categories{
    slug
      id
    name
  
  }
}`
});
const paths = data.data.categories.map((category)=>{
  return {
    params:{
      slug:category.slug
    }
  }
})
  return{
    paths,
    fallback:false
  }
}